{
	"@metadata": {
		"authors": [
			"Ameisenigel",
			"Brettchenweber",
			"ElBe",
			"FF-11",
			"FF11",
			"Justman10000",
			"McDutchie"
		]
	},
	"apihelp-wikilambda_fetch-summary": "Holt das JSON-Modell von ZObjekten.",
	"apihelp-wikilambda_fetch-param-zids": "Die abzurufenden ZObjekt-ZIDs.",
	"apihelp-wikilambda_fetch-param-revisions": "Die Versionen der relevanten ZIDs zum Abrufen. Wenn nicht gesetzt, werden die neuesten Versionen abgerufen.",
	"apihelp-wikilambda_fetch-param-language": "Die Sprache, in der die Ergebnisse zurückgegeben werden sollen.",
	"apihelp-wikilambda_fetch-example-single": "Holt ein einzelnes ZObjekt, Z1.",
	"apihelp-wikilambda_fetch-example-single-old": "Abrufen der Version 12 eines einzelnen ZObjekts, Z1.",
	"apihelp-wikilambda_fetch-example-multiple": "Holt drei ZObjekte: Z1, Z2 und Z3.",
	"apihelp-wikilambda_fetch-example-multiple-old": "Holen von Version 12 von ZObjekt Z1, Version 14 von Z2 und Version 25 von Z3.",
	"apihelp-wikilambda_function_call-param-zobject": "ZObjekt für Funktionsaufruf",
	"apihelp-wikilambda_function_call-example-generic-list": "Aufrufen einer Funktion, die das erste Element einer typisierten Liste zurückgibt",
	"apihelp-wikilambda_function_call-example-generic-pair": "Aufrufen einer Funktion, die das zweite Element eines Typed pair&lt;String,Typed pair&lt;String,Boolean&gt;&gt;",
	"apihelp-wikilambda_function_call-example-generic-map": "Aufrufen einer Funktion, die das Element einer generischen Karte an einem bestimmten Schlüssel auf eine Zeichenketten-Version seines Wertes abbildet",
	"apihelp-wikilambda_function_call-example-user-defined-generic-type": "Erzeugen eines Z4/Typs mit einer benutzerdefinierten Funktion und Verwendung dieses Z4/Typs als Z1K1/Typ eines ZObjekts",
	"apihelp-wikilambda_function_call-example-composition": "Aufrufen einer Zusammenstellung: Wenn das erste Argument wahr ist, sortiere das zweite; sonst gib es unberührt zurück",
	"apihelp-wikilambda_function_call-example-notempty": "Ruft die „not empty“-Funktion als Komposition auf: gibt true zurück, wenn die Eingabeliste mindestens ein Element enthält",
	"apihelp-wikilambda_function_call-example-map": "Aufrufen der Karten-Funktion: gegeben eine Funktion und eine Liste von Zeichenketten, wird das Ergebnis der Ausführung der Funktion über jede Zeichenkette zurückgegeben",
	"apihelp-wikilambda_function_call-example-apply": "Aufrufen der Anwendungsfunktion: Eine Funktion und eine Zeichenkette geben das Ergebnis der Ausführung der Funktion über die Zeichenkette zurück",
	"apihelp-wikilambda_function_call-example-if": "Aufruf vom eingebauten Z802 (If) mit falschem Vorzeichen.",
	"apihelp-wikilambda_function_call-example-native-js-code": "Aufrufen von selbst geschriebenem JavaScript-Code",
	"apihelp-wikilambda_function_call-example-native-python-code": "Aufrufen von selbst geschriebenem Python-3-Code",
	"apihelp-wikilambda_function_call-example-user-defined-python": "Aufrufen einer Python-Funktion mit einem benutzerdefinierten Typ.",
	"apihelp-wikilambda_function_call-example-user-defined-javascript": "Aufrufen einer JavaScript-Funktion mit einem benutzerdefinierten Typ.",
	"apihelp-wikilambda_function_call-example-user-defined-validation": "Aufrufen einer benutzerdefinierten, in Python implementierten Validierungsfunktion",
	"apihelp-wikilambda_function_call-example-curry": "Aufrufen einer Currying-Funktion",
	"apihelp-wikilambda_function_call-example-socket": "Aufrufen einer Funktion, die die Eintrittsinvarianz verwendet, um den Orchestrator zurückzurufen",
	"apihelp-wikilambda_function_call-example-timeout": "Aufrufen einer Funktion, die versucht, ewig zu laufen, und deshalb im Evaluator eine Zeitüberschreitung verursacht",
	"apihelp-wikilambda_function_call-example-orchestrator-timeout": "Aufrufen einer Funktion, die im Orchestrator zu lange läuft und deshalb eine Zeitüberschreitung verursacht",
	"apihelp-wikilambda_function_call-summary": "Aufrufen einer Funktion durch Aufruf des Funktions-Orchestrators",
	"apihelp-wikifunctions_run-summary": "Führe einen Funktionsaufruf aus",
	"apihelp-wikifunctions_run-param-function_call": "ZObject für den auszuführenden Funktionsaufruf",
	"apihelp-wikilambda_supported_programming_languages-summary": "Abrufen der vom Evaluator unterstützten Programmiersprachen",
	"apihelp-query+wikilambdasearch_labels-summary": "Mit diesem API-Abfragelistengenerator kannst du ZObjects nach Bezeichnungen in einer bestimmten Sprache durchsuchen. Er dient in erster Linie zur Unterstützung des Look-Ahead-Suchsystems.",
	"apihelp-query+wikilambdasearch_labels-param-search": "Der Suchbegriff",
	"apihelp-query+wikilambdasearch_labels-param-language": "Der MediaWiki-Sprachcode, in dem gesucht werden soll",
	"apihelp-query+wikilambdasearch_labels-param-nofallback": "Ob nur in der angegebenen Sprache und nicht in den Fallback-Sprachen gesucht werden soll",
	"apihelp-query+wikilambdasearch_labels-param-exact": "Ob nach exakten Übereinstimmungen gesucht werden soll. Wenn diese Option deaktiviert ist, wird die Eingabe als eine von Groß- und Kleinschreibung unabhängige, Unicode-normalisierte Suche verwendet, wobei Akzente auf lateinischen Zeichen ignoriert werden.",
	"apihelp-query+wikilambdasearch_labels-param-type": "Schränkt Übereinstimmungen auf einen bestimmten Typ von ZObjekten ein.",
	"apihelp-query+wikilambdasearch_labels-param-return_type": "Schränkt Übereinstimmungen auf ZFunktionen ein, die den angegebenen Typ zurückgeben können, einschließlich solcher, die ein generisches ZObjekt zurückgeben.",
	"apihelp-query+wikilambdasearch_labels-param-strict_return_type": "Beschränkung des Rückgabetyps auf den angegebenen Typ, ausgenommen generisches ZObjekt",
	"apihelp-query+wikilambdasearch_labels-param-limit": "Die maximale Anzahl von Ergebnissen, die zurückgegeben werden sollen",
	"apihelp-query+wikilambda-example-simple": "Suche nach ZObjekten, deren Bezeichnung mit „foo“ auf Englisch übereinstimmt",
	"apihelp-query+wikilambda-example-nofallback": "Sucht nach ZObjekten, deren Bezeichnung mit „foo“ auf Französisch übereinstimmt, und akzeptiert keine Fallback-Sprachen",
	"apihelp-query+wikilambda-example-type": "Suche nach ZObjekten vom Typ „Z4“, Rückgabe von englischen Bezeichnungen",
	"apihelp-query+wikilambda-example-return-type": "Suche nach ZObjekten des Rückgabetyps „Z40“ oder „Z1“, Rückgabe englischer Bezeichnungen",
	"apihelp-query+wikilambda-example-strict-return-type": "Suche nach ZObjekten mit Rückgabetyp „Z40“, Rückgabe englischer Bezeichnungen",
	"apihelp-query+wikilambdaload_zobjects-summary": "Sucht ZObjekte anhand ihrer ZIDs und gibt ihr JSON-Modell vollständig oder gefiltert nach einer bestimmten Sprache oder Fallbacks zurück. Wenn eine der angegebenen ZIDs nicht im Wiki vorhanden ist, wird ein Z5-Fehler anstelle des angeforderten ZObjekts zurückgegeben.",
	"apihelp-query+wikilambdaload_zobjects-param-zids": "Die abzurufenden ZObjekt-ZIDs.",
	"apihelp-query+wikilambdaload_zobjects-param-revisions": "Die abzurufenden Version-IDs. Muss leer sein oder mit der Anzahl der angeforderten ZIDs übereinstimmen.",
	"apihelp-query+wikilambdaload_zobjects-param-language": "Der MediaWiki-Sprachcode, in dem alle ZObjekt-Bezeichnungen ausgegeben werden sollen.",
	"apihelp-query+wikilambdaload_zobjects-param-canonical": "Ob die kanonische Form oder, wenn deaktiviert, die teilnormale Form der angeforderten ZObjekte zurückgegeben werden soll. Diese Teilnormalisierung schließt ZListen, monolinguale Zeichenketten und mehrsprachige Zeichenketten aus.",
	"apihelp-query+wikilambdaload_zobjects-param-get_dependencies": "Ob auch die ZObjekte zurückgegeben werden sollen, die von den ursprünglich angeforderten ZIDs abhängig sind.",
	"apihelp-query+wikilambdaload_zobjects-example-full": "Suche nach den ZObjekten Z12 und Z4 und gib deren vollständige JSON-Repräsentation zurück.",
	"apihelp-query+wikilambdaload_zobjects-example-language": "Suche nach den ZObjekten Z12 und Z4 und gib deren Bezeichnungen gefiltert nach Spanisch oder Fallback-Sprachen zurück.",
	"apihelp-query+wikilambdaload_zobjects-example-error": "Suche nach den ZObjekten Z1 und dem nicht existierenden Z0123456789 und gib deren vollständige JSON-Repräsentation zurück.",
	"apihelp-query+wikilambdaload_zobjects-example-canonical": "Sucht nach dem ZObjekt Z12 und gibt dessen kanonische JSON-Darstellung zurück.",
	"apierror-query+wikilambdaload_zobjects-unloadable": "ZObjectStore konnte die Seite für „$1“ nicht laden.",
	"apierror-query+wikilambdaload_zobjects-notzobject": "ZObjectStore lud ein Nicht-ZObjekt für „$1“.",
	"apihelp-wikilambda_edit-example-create": "Erzeugt ein neues ZObjekt vom Typ Z6, mit dem Wert „value“ und der Bezeichnung „label“",
	"apihelp-wikilambda_edit-example-edit-incorrect": "Versuch, das ZObjekt Z010 mit falschen Daten zu aktualisieren",
	"apihelp-wikilambda_edit-summary": "Erstellt oder bearbeitet ein ZObjekt.",
	"apihelp-wikilambda_edit-param-summary": "Zusammenfassende Meldung bearbeiten",
	"apihelp-wikilambda_edit-param-zid": "ZID des zu bearbeitenden ZObjekts. Wenn null, wird das ZObjekt neu erstellt",
	"apihelp-wikilambda_edit-param-zobject": "JSON-Repräsentation des zu speichernden ZObjekts",
	"apierror-wikilambda_function_call-not-connected": "Konnte Host „$1“ nicht auflösen, wahrscheinlich weil der Orchestrator nicht läuft. Bitte lies in der README nach, um den Orchestrator zu einer docker-compose-Konfiguration hinzuzufügen.",
	"apierror-wikilambda_function_call-concurrency-limit": "Du hast zu viele Funktionsaufrufe, die im Moment ausgeführt werden.",
	"apierror-wikilambda_function_call-response-malformed": "Die Antwort des Funktionsaufrufs war fehlerhaft: „$1“.",
	"apierror-wikilambda_supported_programming_languages-not-connected": "Host „$1“ konnte nicht aufgelöst werden, wahrscheinlich weil der Orchestrator nicht läuft. Bitte lies das README, um den Orchestrator zu deiner docker-compose-Konfiguration hinzuzufügen.",
	"apierror-wikilambda_supported_programming_languages-concurrency-limit": "Du hast zu oft nach Programmiersprachen angefragt.",
	"apihelp-query+wikilambdafn_search-summary": "Diese API-Abfrageliste sucht nach den IDs aller ZObjekte, die einer bereitgestellten ZFunktions-ID zugeordnet sind",
	"apihelp-query+wikilambdafn_search-example-simple": "Suchen nach ZImplementierungs-IDs, die einer bestimmten ZFunktions-ID zugeordnet sind",
	"apihelp-query+wikilambdafn_search-param-zfunction_id": "Die ZFunktion-ID, nach der gesucht werden soll",
	"apihelp-query+wikilambdafn_search-param-type": "Der Typ des ZObjekts, das von der ZFunktion referenziert wird und nach dem gesucht werden soll",
	"apihelp-query+wikilambdafn_search-param-limit": "Die maximale Anzahl von Ergebnissen, die zurückgegeben werden sollen",
	"apihelp-wikilambda_perform_test-example": "Durchführung von Tests gegen eine vollständig bereitgestellte ZF-Funktion, ZImplementierung und ZTester",
	"apihelp-wikilambda_perform_test-z801": "Ausführen aller ZTests für alle ZImplementierungen der ZF-Funktion Z801",
	"apihelp-wikilambda_perform_test-z801-implementation": "Ausführen aller ZTests für ZImplementierung Z901/Einbau der ZF-Funktion Z801/Echo",
	"apihelp-wikilambda_perform_test-z801-tester": "Ausführen der ZTester Z8010/Echo Tester für Strings und Z8011/Echo Tester für UTF8 Strings für alle ZImplementierungen der ZF-Funktion Z801/Echo",
	"apihelp-wikilambda_perform_test-z801-implementation-and-testers": "Ausführen aller ZTester Z8010 für ZImplementierung Z901/Einbau der ZF-Funktion Z801/Echo",
	"apihelp-wikilambda_perform_test-summary": "Endpunkt zur Abfrage von Testergebnissen für eine ZFunktion. Akzeptiert eine ZFunktion, eine Liste von ZImplementierungen und eine Liste von ZTestern. Akzeptiert entweder eine Liste von ZIDs oder das vollständige ZObjekt für die Funktion, Implementierungen oder Tester. Akzeptiert auch einen Schlüssel, um einen Backend-Cache zu verwenden oder nicht.",
	"apihelp-wikilambda_perform_test-param-zfunction": "Die zu testende ZFunktions-ID (oder das Objekt)",
	"apihelp-wikilambda_perform_test-param-zimplementations": "Die Liste der zu testenden ZImplementierungs-IDs (oder Objekte)",
	"apihelp-wikilambda_perform_test-param-ztesters": "Die Liste der zu prüfenden ZTester-IDs (oder Objekte)",
	"apihelp-wikilambda_perform_test-param-nocache": "Ob der Cache verwendet werden soll oder nicht"
}
