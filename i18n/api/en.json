{
	"@metadata": {
		"authors": [
			"Cory Massaro",
			"Genoveva Galarza",
			"James D. Forrester"
		]
	},
	"apihelp-wikilambda_fetch-summary": "Fetch the JSON model of ZObjects.",
	"apihelp-wikilambda_fetch-param-zids": "The ZObject ZIDs to fetch.",
	"apihelp-wikilambda_fetch-param-revisions": "The revisions of the relevant ZIDs to fetch. If unset, this will fetch the latest revisions.",
	"apihelp-wikilambda_fetch-param-language": "The language in which to return results.",
	"apihelp-wikilambda_fetch-example-single": "Fetch a single ZObject, Z1.",
	"apihelp-wikilambda_fetch-example-single-old": "Fetch revision 12 of a single ZObject, Z1.",
	"apihelp-wikilambda_fetch-example-multiple": "Fetch three ZObjects: Z1, Z2, and Z3.",
	"apihelp-wikilambda_fetch-example-multiple-old": "Fetch revision 12 of the ZObject Z1, revision 14 of Z2, and revision 25 of Z3.",
	"apierror-wikilambda_fetch-missingzid": "The given ZID '$1' does not exist on this wiki.",
	"apihelp-wikilambda_function_call-param-zobject": "ZObject for function call",
	"apihelp-wikilambda_function_call-example-generic-list": "Invoke a function that returns the first element of a typed List",
	"apihelp-wikilambda_function_call-example-generic-pair": "Invoke a function that returns the second element of a Pair<String,Pair<String,Bool>>",
	"apihelp-wikilambda_function_call-example-generic-map": "Invoke a function that maps the element of a generic Map at a given key to a string version of its value",
	"apihelp-wikilambda_function_call-example-user-defined-generic-type": "Generate a Z4/Type with a user-defined function and use that Z4/Type as a ZObject's Z1K1/Type",
	"apihelp-wikilambda_function_call-example-composition": "Invoke a composition: if first argument is true, sort second; else, return it intact",
	"apihelp-wikilambda_function_call-example-notempty": "Invoke the \"not empty\" function as a composition: returns true iff input list contains at least one element",
	"apihelp-wikilambda_function_call-example-map": "Invoke the Map function: given a function and a list of strings, return the result of running the function over each string",
	"apihelp-wikilambda_function_call-example-apply": "Invoke the Apply function: given a function and a string, return the result of running the function over the string",
	"apihelp-wikilambda_function_call-example-if": "Invoke built-in Z802 (If) with false predicate",
	"apihelp-wikilambda_function_call-example-native-js-code": "Invoke user-written JavaScript code",
	"apihelp-wikilambda_function_call-example-native-python-code": "Invoke user-written Python 3 code",
	"apihelp-wikilambda_function_call-example-user-defined-python": "Invoke Python function using a user-defined type.",
	"apihelp-wikilambda_function_call-example-user-defined-javascript": "Invoke JavaScript function using a user-defined type.",
	"apihelp-wikilambda_function_call-example-user-defined-validation": "Invoke user-defined validation function implemented in Python.",
	"apihelp-wikilambda_function_call-example-curry": "Create and invoke a curried function",
	"apihelp-wikilambda_function_call-summary": "Invoke a function by calling the function-orchestrator",
	"apihelp-wikilambda_health_check-summary": "Perform a health check against the WikiLambda endpoint",
	"apihelp-query+wikilambdasearch_labels-summary": "This API query list generator lets you search ZObjects for labels in a given language. It principally exists to support the look-ahead search system.",
	"apihelp-query+wikilambdasearch_labels-param-search": "The search term",
	"apihelp-query+wikilambdasearch_labels-param-language": "The MediaWiki language code in which to search",
	"apihelp-query+wikilambdasearch_labels-param-nofallback": "Whether to search only in the given language and not its fallback languages",
	"apihelp-query+wikilambdasearch_labels-param-exact": "Whether to search for exact matches. If disabled, input will be taken as a case-insensitive, Unicode-normalised search with accents on Latin characters ignored.",
	"apihelp-query+wikilambdasearch_labels-param-type": "Restrict matches to a specific type of ZObject.",
	"apihelp-query+wikilambdasearch_labels-param-return_type": "Restrict matches to ZFunctions that can return the given type, including those who return a generic ZObject.",
	"apihelp-query+wikilambdasearch_labels-param-strict_return_type": "Restrict return type to be strictly the given one, excluding generic ZObject.",
	"apihelp-query+wikilambdasearch_labels-param-limit": "The maximum number of results to return",
	"apihelp-query+wikilambda-example-simple": "Search for ZObjects whose label matches 'foo' in English",
	"apihelp-query+wikilambda-example-nofallback": "Search for ZObjects whose label matches 'foo' in French, and don't accept fallback languages",
	"apihelp-query+wikilambda-example-type": "Search for ZObjects of type 'Z4', returning English labels",
	"apihelp-query+wikilambda-example-return-type": "Search for ZObjects of return type 'Z40' or 'Z1', returning English labels",
	"apihelp-query+wikilambda-example-strict-return-type": "Search for ZObjects of return type strictly 'Z40', returning English labels",
	"apihelp-query+wikilambdaload_zobjects-summary": "Search ZObjects given their ZIDs and return their JSON model fully or filtered to a given language or fallbacks. If any of the provided ZIDs does not exist in the wiki, will return a Z5 error instead of the requested ZObject.",
	"apihelp-query+wikilambdaload_zobjects-param-zids": "The ZObject ZIDs to fetch.",
	"apihelp-query+wikilambdaload_zobjects-param-language": "The MediaWiki language code in which to return all the ZObject labels.",
	"apihelp-query+wikilambdaload_zobjects-param-canonical": "Whether to return the canonical form or, if disabled, the partially normal form of the requested ZObjects. This partial normalization excludes ZLists, ZMonolingual Strings and ZMultilingual Strings.",
	"apihelp-query+wikilambdaload_zobjects-example-full": "Search for ZObjects Z12 and Z4 and return their full JSON representation.",
	"apihelp-query+wikilambdaload_zobjects-example-language": "Search for ZObjects Z12 and Z4 and return their labels filtered to Spanish or fallback languages.",
	"apihelp-query+wikilambdaload_zobjects-example-error": "Search for ZObjects Z1 and the non-existent Z012345789 and return their full JSON representation.",
	"apihelp-query+wikilambdaload_zobjects-example-canonical": "Search for ZObject Z12 and return its JSON canonical representation.",
	"apierror-query+wikilambdaload_zobjects-unloadable": "ZObjectStore could not load the page for '$1'.",
	"apierror-query+wikilambdaload_zobjects-notzobject": "ZObjectStore loaded a non-ZObject for '$1'.",
	"apihelp-wikilambda_edit-example-create": "Create a new ZObject of type Z6, with value 'value' and labeled 'label'",
	"apihelp-wikilambda_edit-example-edit-incorrect": "Attempt to update the ZObject Z010 with an incorrect data",
	"apihelp-wikilambda_edit-summary": "Create or edit a ZObject.",
	"apihelp-wikilambda_edit-param-summary": "Edit summary message",
	"apihelp-wikilambda_edit-param-zid": "ZID of the ZObject to edit. If null, the ZObject will be newly created",
	"apihelp-wikilambda_edit-param-zobject": "JSON representation of the ZObject to save",
	"apierror-wikilambda_function_call-not-connected": "Could not resolve host '$1', probably because the orchestrator is not running. Please consult the README to add the orchestrator to your docker-compose configuration.",
	"apierror-wikilambda_function_call-concurrency-limit": "You have too many function calls executing right now.",
	"apierror-wikilambda_edit-invalidjson": "Couldn't create ZObject for given input '$1'; invalid JSON.",
	"apierror-wikilambda_edit-unmatchingzid": "The parameter ZID '$1' does not match with the ZObject ID '$2'",
	"apihelp-query+wikilambdafn_search-summary": "This API query list searches for the IDs of all ZObjects associated with a provided ZFunction ID",
	"apihelp-query+wikilambdafn_search-example-simple": "Search for ZImplementation IDs that are associated to a given ZFunction ID",
	"apihelp-query+wikilambdafn_search-param-zfunction_id": "The ZFunction ID to search for",
	"apihelp-query+wikilambdafn_search-param-type": "The type of ZObject referenced by the ZFunction to search for",
	"apierror-wikilambda_perform_test-not-connected": "Could not resolve host '$1', probably because the orchestrator is not running. Please consult the README to add the orchestrator to your docker-compose configuration.",
	"apihelp-wikilambda_perform_test-example": "Perform tests against a fully provided ZFunction, ZImplementation, and ZTesters",
	"apihelp-wikilambda_perform_test-summary": "Endpoint to query test results for a ZFunction. Accepts a ZFunction, a list of ZImplementations, and a list of ZTesters. Accepts either a list of ZIDs or the full ZObject for the function, implementations, or testers. Also accepts a key to utilize a back end cache or not.",
	"apihelp-wikilambda_perform_test-param-zfunction": "The ZFunction ID (or object) to test",
	"apihelp-wikilambda_perform_test-param-zimplementations": "The list of ZImplementation IDs (or objects) to test",
	"apihelp-wikilambda_perform_test-param-ztesters": "The list of ZTester IDs (or objects) to test",
	"apihelp-wikilambda_perform_test-param-nocache": "Whether to use the cache or not"

}
