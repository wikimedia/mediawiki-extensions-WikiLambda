/*!
 * WikiLambda special page styles
 * Styles and variables declaration added on this file should be unique to the wikilamdba project.
 * Uses variables from Codex Design Tokens https://doc.wikimedia.org/codex/latest/design-tokens/overview.html
 *
 * @copyright 2020â€“ Abstract Wikipedia team; see AUTHORS.txt
 * @license MIT
 */
@import './ext.wikilambda.app.variables.less';

.ext-wikilambda-app-link {
	color: @color-progressive;

	&:hover {
		color: @color-progressive--hover;
	}

	&:active {
		color: @color-progressive--active;
	}

	&:focus {
		color: @color-progressive--focus;
	}

	&:visited {
		color: @color-progressive--focus;
	}
}

.ext-wikilambda-app-field-overrides {
	.cdx-text-input,
	.cdx-select,
	.cdx-select-vue,
	.cdx-lookup {
		width: 100%;
		min-width: auto;
		max-width: @min-width-medium;

		&__handle {
			min-width: auto;
		}

		&__input {
			min-width: initial;
		}
	}
}

.ext-wikilambda-app-toast-message {
	display: flex;
	align-items: center;
	flex-direction: column;
	position: fixed;
	bottom: @spacing-400;
	left: 0;
	right: 0;
}

/**
 * Key-value level colors
 */
.ext-wikilambda-app-key-level {
	&--0 {
		--levelColor: @wl-key-value-color-0;
	}

	&--1 {
		--levelColor: @wl-key-value-color-1;
	}

	&--2 {
		--levelColor: @wl-key-value-color-2;
	}

	&--3 {
		--levelColor: @wl-key-value-color-3;
	}

	&--4 {
		--levelColor: @wl-key-value-color-4;
	}

	&--5 {
		--levelColor: @wl-key-value-color-5;
	}

	&--6 {
		--levelColor: @wl-key-value-color-6;
	}
}

/**
 * Grid system
 */
.ext-wikilambda-app-row {
	display: flex;
	flex-wrap: wrap;
	margin-left: -@spacing-75;
	margin-right: -@spacing-75;
}

.ext-wikilambda-app-col {
	box-sizing: border-box;
	padding-left: @spacing-75;
	padding-right: @spacing-75;
	flex-grow: 1;
	min-width: 0;
}

/**
 * Generate columns for a grid system
 * @param {Number} @index - The index of the column
 * @see https://www.mediawiki.org/wiki/Manual:Coding_conventions/CSS#Mixins
 */
.mixin-generate-columns(@index) when (@index <= 24) {
	.ext-wikilambda-app-col-@{index} {
		flex-basis: calc( 100% / 24 * @index );
		max-width: calc( 100% / 24 * @index );
	}

	.mixin-generate-responsive-columns( @index, mobile );
	.mixin-generate-responsive-columns( @index, tablet );
	.mixin-generate-responsive-columns( @index, desktop );

	.mixin-generate-columns( @index + 1 );
}

/**
 * Generate responsive columns for a grid system
 * @param {Number} @index - The index of the column
 * @param {String} @size - The size of the column
 * @see https://www.mediawiki.org/wiki/Manual:Coding_conventions/CSS#Mixins
 */
.mixin-generate-responsive-columns(@index, @size) {
	@media ( max-width: ~'@{max-width-breakpoint-@{size}}' ) {
		.ext-wikilambda-app-col-@{size}-@{index} {
			flex-basis: calc( 100% / 24 * @index );
			max-width: calc( 100% / 24 * @index );
		}
	}
}

.mixin-generate-columns( 1 );

/**
 * Empty chip
 */
.mixin-empty-chip() {
	border: 1px dashed @border-color-base;
}
